apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: upgrade-containerd
  namespace: windows-nodepool
spec:
  selector:
    matchLabels:
      name: upgrade-containerd
  template:
    metadata:
      labels:
        name: upgrade-containerd
    spec:
      hostNetwork: true
      securityContext:
        windowsOptions:
          hostProcess: true
          runAsUserName: "NT AUTHORITY\\SYSTEM"
      nodeSelector:
        "kubernetes.io/os": windows
      containers:
        - name: upgrade-containerd
          # this image does not work in win server 2019 nodepools
          image: mcr.microsoft.com/powershell
          command:
            # For NVidia T4 machines, install grid driver - Restart is triggered automatically after install
            - powershell
            - /c
            - $currentVersion=$(containerd --version);
            - $version="1.7.0-beta.3";
            - echo "$version";
            - echo "$currentVersion";
            - if ($currentVersion -like "*$version*") { while ($true) { Start-Sleep 30 }};
            - echo "Install '$version' version of containerd";
            - curl.exe  -o containerd-windows-amd64.tar.gz -L https://github.com/containerd/containerd/releases/download/v$version/containerd-$version-windows-amd64.tar.gz;
            - tar.exe xvf .\containerd-windows-amd64.tar.gz;
            - echo "Stop services";
            - echo "$Env:ProgramFiles";
            - Stop-Service kubeproxy; Stop-Service kubelet; Stop-Service containerd;
            - echo "Replace ctr.exe";
            - Copy-Item -Path ".\bin\ctr.exe" -Destination "$Env:ProgramFiles\containerd" -Force;
            - Copy-Item -Path ".\bin\containerd-shim-runhcs-v1.exe" -Destination "$Env:ProgramFiles\containerd" -Force;
            - Copy-Item -Path ".\bin\containerd.exe" -Destination "$Env:ProgramFiles\containerd" -Force;
            - echo "Start service";
            - Start-Service containerd; Start-Service kubeproxy; Start-Service kubelet;
            - echo "Finished installing containrd";
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
          securityContext:
            privileged: true
